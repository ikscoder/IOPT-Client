<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:oxy="http://oxyplot.org/wpf"
                    xmlns:local="clr-namespace:Client"
                    xmlns:classes="clr-namespace:Client.Classes"
                    xmlns:controls="clr-namespace:Client.Controls">

    <!--#region Geometry-->
    <Geometry x:Key="Settings">M16.000015,9.6000061C12.500012,9.6000061 9.5999844,12.5 9.5999844,16 9.5999844,19.5 12.500012,22.399994 16.000015,22.399994 19.500019,22.399994 22.400015,19.5 22.400015,16 22.400015,12.5 19.500019,9.6000061 16.000015,9.6000061z M14.199995,0L17.800005,0C18.199999,0,18.599993,0.29998779,18.599993,0.79998779L18.599993,4.7999878C19.900013,5.1000061,21.000019,5.6000061,22.099997,6.2999878L25.000023,3.3999939C25.099999,3.2999878 25.300011,3.1999817 25.500025,3.1999817 25.700007,3.1999817 25.900019,3.2999878 26.000025,3.3999939L28.600033,6C28.900021,6.2999878,28.900021,6.7999878,28.600033,7.1000061L25.700007,10C26.400019,11.100006,26.900019,12.299988,27.200007,13.5L31.20001,13.5C31.600037,13.5,31.999998,13.799988,31.999998,14.299988L31.999998,17.899994C31.999998,18.299988,31.700012,18.699982,31.20001,18.699982L27.200007,18.699982C26.900019,20,26.400019,21.100006,25.700007,22.199982L28.600033,25.100006C28.700009,25.199982 28.799984,25.399994 28.799984,25.600006 28.799984,25.799988 28.700009,26 28.600033,26.100006L26.000025,28.600006C25.900019,28.699982 25.700007,28.799988 25.500025,28.799988 25.300011,28.799988 25.099999,28.699982 25.000023,28.600006L22.099997,25.699982C21.000019,26.399994,19.800007,26.899994,18.599993,27.199982L18.599993,31.199982C18.599993,31.600006,18.300005,32,17.800005,32L14.199995,32C13.8,32,13.400006,31.699982,13.400006,31.199982L13.400006,27.199982C12.099987,26.899994,11.000011,26.399994,9.9000027,25.699982L7.0000064,28.600006C6.9000003,28.699982 6.6999881,28.799988 6.5000059,28.799988 6.2999937,28.799988 6.099981,28.699982 6.0000054,28.600006L3.3999967,26C3.0999784,25.699982,3.0999784,25.199982,3.3999967,24.899994L6.2999937,22C5.5999805,20.899994,5.0999801,19.699982,4.7999923,18.5L0.79998828,18.5C0.39999409,18.5,-1.933513E-07,18.199982,0,17.699982L0,14.100006C-1.933513E-07,13.699982,0.2999879,13.299988,0.79998828,13.299988L4.7999923,13.299988C5.0999801,12,5.5999805,10.899994,6.2999937,9.7999878L3.3999967,7C3.2999908,6.8999939 3.1999845,6.6999817 3.1999845,6.5 3.1999845,6.2999878 3.2999908,6.1000061 3.3999967,6L6.0000054,3.3999939C6.099981,3.2999878 6.2999937,3.1999817 6.5000059,3.1999817 6.6999881,3.1999817 6.9000003,3.2999878 7.0000064,3.3999939L9.9000027,6.2999878C11.000011,5.6000061,12.199993,5.1000061,13.400006,4.7999878L13.400006,0.79998779C13.400006,0.29998779,13.8,0,14.199995,0z</Geometry>

    <Geometry x:Key="Exit">M2.999979,0C3.8000264,0,4.4999763,0.30000305,5.1000115,0.90000927L15.999954,11.700012 26.899959,0.90000927C28.099967,-0.29998779 29.999927,-0.29998779 31.099961,0.90000927 32.299972,2.1000061 32.299972,4 31.099961,5.1000061L20.199958,16 31.099961,26.900009C32.299972,28.100006 32.299972,30 31.099961,31.100006 29.899951,32.300003 27.999931,32.300003 26.899959,31.100006L15.999954,20.200012 5.1000115,31.100006C3.9000017,32.300003 1.9999809,32.300003 0.90000743,31.100006 -0.30000248,29.900009 -0.30000248,28 0.90000743,26.900009L11.800011,16 0.90000743,5.1000061C-0.30000248,3.9000092 -0.30000248,2 0.90000743,0.90000927 1.4999818,0.30000305 2.1999928,0 2.999979,0z</Geometry>

    <Geometry x:Key="Back">M21.575989,0L32,9.0769969 21.390991,17.842995 20.208008,16.409996 28.848999,9.2729961C8.6690063,4.3729998,1.967041,18.186997,1.6870117,18.790001L0,18.010994C0.072021484,17.856995,6.960022,3.4460021,26.697021,6.9219991L20.356995,1.4000011z</Geometry>

    <Geometry x:Key="Update">M15.938026,10.979996L17.938026,10.979996 17.938026,22.074949 20.27599,19.736986 21.689991,21.150986 16.939991,25.900986 16.937481,25.898478 16.934973,25.900986 12.184973,21.150986 13.598972,19.736986 15.938026,22.07604z M19.872986,0C23.780029,3.6547317E-07,27.082031,3.0029921,27.082031,6.9920072L27.078979,6.9920072C29.837036,7.989017 32,10.459995 32,13.46201 32,17.064001 29.02301,19.956001 26.031006,19.956001L25.843018,19.956001 22.932983,19.956001 22.927002,17.962013 24.763,17.962013 25.09198,17.962013C28.083984,17.962013 29.986023,16.121008 29.986023,13.474004 29.986023,10.820011 27.90802,8.6839942 24.916016,8.6839942L24.916016,6.8720121C24.916016,4.5450153 22.775024,2.0010082 19.890015,2.001008 17.124023,2.0010082 14.588013,4.0000019 14.588013,6.9920072L12.40802,6.9920072C12.40802,6.9920072 12.393005,7.0170011 12.393005,7.0119962 12.002991,5.7040123 10.538025,4.9960045 9.072998,5.3590111 7.3599854,5.7800011 7.1000366,7.6300082 7.1170044,8.694004L6.9639893,8.6960182 6.9639893,8.7770118C3.9730225,8.7770118 2.0310059,10.833013 2.0310059,13.360997 2.0310059,15.882025 4.315979,17.933021 7.0579834,17.945015L10.947998,17.973 10.942017,19.956001 6.9639893,19.956001C2.9750366,19.821022 0,16.905004 0,13.359014 0,10.343998 2.1640015,7.8219943 5.1790161,7.0430021 5.5930176,5.1730065 6.776001,3.8529987 8.5440063,3.4180006 10.205994,3.007997 11.862,3.3909928 13.036987,4.3320026 14.215027,1.847993 16.906006,3.6547317E-07 19.872986,0z</Geometry>

    <Geometry x:Key="Upload">M16.936007,10.979014L16.937996,10.981005 16.939987,10.979014 21.689985,15.730008 20.275986,17.144007 17.937004,14.804536 17.937004,25.941009 15.937003,25.941009 15.937003,14.806521 13.600007,17.144007 12.186007,15.730008z M19.872986,0C23.780029,2.1826963E-07,27.082031,3.0029907,27.082031,6.9919738L27.078979,6.9919738C29.837036,7.9889831 32,10.459991 32,13.461974 32,17.065002 29.02301,19.957001 26.031006,19.957001L25.843018,19.957001 22.932983,19.957001 22.927002,17.961975 24.763,17.961975 25.09198,17.961975C28.083984,17.961975 30.152039,16.329987 30.152039,13.681975 30.152039,11.027985 27.90802,8.6839904 24.916016,8.6839904L24.916016,6.8719787C24.916016,4.5449829 22.775024,2.0009768 19.890015,2.0009765 17.124023,2.0009768 14.588013,4 14.588013,6.9919738L12.40802,6.9919738C12.40802,6.9919738 12.393005,7.0169983 12.393005,7.0119934 12.002991,5.7039795 10.538025,4.9960022 9.072998,5.3589782 7.3599854,5.7799987 7.1000366,7.6299743 7.1170044,8.6949768L6.9639893,8.6959839 6.9639893,8.7769775C3.9730225,8.7769775 2.0310059,10.832977 2.0310059,13.361999 2.0310059,15.882995 4.31604,17.93399 7.0579834,17.944977L10.947998,17.973999 10.942017,19.957001 6.9639893,19.957001C2.9750366,19.821991 0,16.905975 0,13.358977 0,10.345001 2.1640015,7.8219909 5.1790161,7.0429992 5.5930176,5.1730041 6.776001,3.8529968 8.5440063,3.4179992 10.205994,3.0079956 11.862,3.3899841 13.036987,4.3320007 14.215027,1.847992 16.906006,2.1826963E-07 19.872986,0z</Geometry>

    <Geometry x:Key="Edit">M0,22.691865L9.6958332,27.864942 0.24500618,32.000013z M8.8988495,6.3116251L18.869686,12.034729 11.211813,25.370919 10.644821,23.665877 7.7198686,23.364879 7.2188854,21.531844 4.3549361,21.429853 3.5479436,19.422835 1.2459807,19.647815z M13.690775,0.00052993685C13.965764,-0.0064584891,14.233765,0.055554115,14.474758,0.19355655L21.534634,4.2476002C22.392622,4.7375976,22.586618,6.0146238,21.968632,7.0966398L21.126636,8.5616571 10.95782,2.7255753 11.799801,1.2555529C12.243793,0.48054798,12.988775,0.017528671,13.690775,0.00052993685z</Geometry>

    <Geometry x:Key="Delete">M6.1999817,0L16,9.8000031 25.799988,0 32,6.1999969 22.199982,16 32,25.800003 25.799988,32 16,22.199997 6.1999817,32 0,25.800003 9.7999878,16 0,6.1999969z</Geometry>

    <Geometry x:Key="Copy">M23.999999,15.418115L23.962253,15.457889C23.181096,16.260372,22.242412,16.940259,21.199292,17.443369L20.999999,17.536404 20.999999,25C20.999999,26.102999,20.103,27,18.999999,27L7.0000002,27 7.0000002,30.000021 23.999999,30.000021z M11.958992,14.577012L8.9899933,16.061019 11.958992,17.94003z M20.999999,7.0000219L20.999999,15.278901 21.012683,15.2716C22.391946,14.431999,23.46508,13.200135,23.994144,11.815854L23.999999,11.7998 23.999999,7.0000219z M7.0234015,3.3905988L3.4139419,7.0000582 7.005018,7.0000582z M9.0305483,1.9999999L8.9950068,9.0000544 1.9999999,9.0000544 1.9999999,25 19.001001,25 19.000703,18.182404 18.80247,18.219628C18.289209,18.309409 17.771127,18.354006 17.254001,18.354006 16.176501,18.354006 15.103297,18.160258 14.086394,17.77764L13.95899,17.727051 13.95899,21.574048 4.9279964,15.856019 13.95899,11.339995 13.95899,15.528388 13.983423,15.541783C15.511926,16.349478,17.277454,16.561065,18.94419,16.14617L19.000615,16.131202 18.999999,1.9999999z M7.5860002,0L18.999999,0C20.103,0,20.999999,0.897,20.999999,1.9999999L20.999999,5.0000219 23.999999,5.0000219C25.103,5.0000222,25.999999,5.8970222,25.999999,7.0000219L25.999999,30.000021C25.999999,31.103022,25.103,32.000021,23.999999,32.000021L7.0000002,32.000021C5.8970001,32.000021,5.0000002,31.103022,5.0000002,30.000021L5.0000002,27 1.9999999,27C0.89700021,27,2.3841858E-07,26.102999,0,25L0,7.586z</Geometry>

    <Geometry x:Key="Logout">M13.993989,8.6300284L13.993989,10.49504 1.9989986,10.49504 1.9989986,12.494052 13.993989,12.494052 13.993989,14.359063 17.430986,11.494046z M11.99499,4.3620035L20.553984,11.494046 11.99499,18.626087 11.99499,14.493064 0,14.493064 0,8.4960276 11.99499,8.4960276z M21.049959,0C27.087998,-2.3050234E-08 31.999998,4.9119765 31.999998,10.950049 31.999998,16.987024 27.087998,21.899 21.049959,21.899 19.180996,21.899 17.424949,21.419996 15.883991,20.590042L17.568993,19.185993C18.639003,19.643022 19.813993,19.899004 21.049959,19.899004 25.986006,19.899004 30.001031,15.883999 30.001031,10.950049 30.001031,6.0140249 25.986006,1.9990191 21.049959,1.9990191 19.48898,1.9990191 18.027002,2.411982 16.74996,3.1199884L15.117998,1.7600059C16.827963,0.64904639,18.863002,-2.3050234E-08,21.049959,0z</Geometry>

    <Geometry x:Key="GetCert">M5.2390408,21.088247L15.360125,21.088247C15.360125,21.088247,15.546132,22.086259,15.59113,22.272258L5.2390408,22.272258C4.967051,22.272258,4.7480397,22.052253,4.7480397,21.781255L4.7480397,21.578251C4.7480397,21.307251,4.967051,21.088247,5.2390408,21.088247z M5.2160458,17.303199L14.170113,17.303199C14.174126,17.3582,14.17112,17.414201,14.150124,17.468202L13.758122,18.487219 5.2160458,18.487219C4.9450473,18.487219,4.7250442,18.268215,4.7250442,17.996208L4.7250442,17.79421C4.7250442,17.522203,4.9450473,17.303199,5.2160458,17.303199z M5.1480522,13.587161L13.845113,13.587161 13.970114,13.867163C14.029121,14.002166,14.001121,14.160165,13.898123,14.26517L13.392106,14.771172 5.1480522,14.771172C4.8770384,14.771172,4.6570353,14.551169,4.6570353,14.280169L4.6570353,14.077164C4.6570353,13.806165,4.8770384,13.587161,5.1480522,13.587161z M23.249197,10.324123C20.131175,10.324123 17.605154,12.851152 17.605154,15.969185 17.605154,19.086225 20.131175,21.615253 23.249197,21.615253 26.367218,21.615253 28.894247,19.086225 28.894247,15.969185 28.894247,12.851152 26.367218,10.324123 23.249197,10.324123z M5.1320452,9.9081179L15.360125,9.9081179 15.360125,10.971126C15.360125,11.013126,15.352129,11.054127,15.338137,11.092129L5.1320452,11.092129C4.8600401,11.092129,4.6410441,10.873126,4.6410441,10.602126L4.6410441,10.399121C4.6410441,10.127123,4.8600401,9.9081179,5.1320452,9.9081179z M23.249197,7.2690879C23.367194,7.2690879,23.4842,7.3140866,23.574196,7.4040915L24.481202,8.3101002C24.579209,8.4081007,24.727206,8.4361006,24.854205,8.3801009L26.02821,7.8600904C26.261214,7.7560927,26.531222,7.8630964,26.634219,8.0950934L27.246224,9.4731156C27.302224,9.599116,27.429223,9.6821171,27.569224,9.6821171L29.076239,9.6821171C29.330239,9.6821171,29.535243,9.8871142,29.535243,10.142122L29.535243,11.425133C29.535243,11.564135,29.621243,11.688137,29.750241,11.738141L30.947257,12.200144C31.18525,12.291141,31.303263,12.55815,31.211251,12.795152L30.669255,14.200167C30.61826,14.331165,30.64925,14.480169,30.748249,14.578169L31.814269,15.643184C31.994263,15.823187,31.994263,16.11519,31.814269,16.295192L30.907248,17.2012C30.809256,17.299202,30.781256,17.447206,30.838263,17.574207L31.357264,18.747217C31.460261,18.98022,31.355265,19.251228,31.123253,19.354225L29.746243,19.965232C29.618252,20.021232,29.535243,20.149233,29.535243,20.289234L29.535243,21.794256C29.535243,22.049255,29.330239,22.25526,29.076239,22.25526L29.024237,22.25526 31.98526,29.371338C32.049271,29.525346,31.893263,29.678348,31.741271,29.61034L28.285233,28.085329C28.168227,28.034317,28.034239,28.088319,27.987227,28.205324L26.575228,31.638363C26.510224,31.796369,26.288222,31.796369,26.222212,31.63937L23.349188,24.748285C23.337195,24.717292 23.334189,24.684288 23.326193,24.654289 23.264197,24.663292 23.20319,24.662285 23.141194,24.647285L20.266171,31.55137C20.201168,31.707363,19.978175,31.707363,19.914162,31.550363L18.502148,28.117326C18.454159,28.001327,18.319149,27.94432,18.20315,27.996322L14.747129,29.521333C14.594128,29.589344,14.439127,29.436342,14.502117,29.28334L17.427144,22.25526 17.423146,22.25526C17.169146,22.25526,16.96315,22.049255,16.96315,21.794256L16.96315,20.511236C16.96315,20.373233,16.877135,20.248233,16.748137,20.199236L15.552128,19.737232C15.314135,19.645229,15.196123,19.379226,15.287126,19.142225L15.829138,17.736202C15.879127,17.606205,15.848135,17.4582,15.749135,17.359199L14.684124,16.295192C14.505123,16.11519,14.505123,15.823187,14.684124,15.643184L15.593129,14.735169C15.689138,14.637169,15.716131,14.488172,15.661138,14.362171L15.141129,13.189153C15.038131,12.957149,15.142121,12.68515,15.374133,12.581145L16.753142,11.972137C16.88115,11.916136,16.96315,11.789137,16.96315,11.649135L16.96315,10.142122C16.96315,9.8871142,17.169146,9.6821171,17.423146,9.6821171L18.70616,9.6821171C18.844162,9.6821171,18.969162,9.59611,19.01816,9.4671112L19.48017,8.2700983C19.571158,8.0340964,19.838173,7.9150912,20.075175,8.0060955L21.482184,8.548102C21.612175,8.600104,21.761177,8.5670992,21.860178,8.4690987L22.924197,7.4040915C23.014195,7.3140866,23.131199,7.2690879,23.249197,7.2690879z M5.1270403,5.7650729L11.604098,5.7650729C11.875096,5.7650729,12.095099,5.9840695,12.095099,6.2550761L12.095099,6.4580737C12.095099,6.7300803,11.875096,6.9490844,11.604098,6.9490844L5.1270403,6.9490844C4.8560423,6.9490844,4.6360392,6.7300803,4.6360392,6.4580737L4.6360392,6.2550761C4.6360392,5.9840695,4.8560423,5.7650729,5.1270403,5.7650729z M0.82001372,0L23.394202,0C23.847193,-2.2791892E-07,24.215208,0.36800782,24.215208,0.82001657L24.215208,6.392079 23.719202,5.8970705C23.596199,5.774068 23.433188,5.7060663 23.259192,5.7060663 23.084187,5.7060663 22.921191,5.774068 22.79819,5.8960711L22.08218,6.6130821 22.08218,2.7830364C22.08218,2.4250306,21.790184,2.1330274,21.431174,2.1330277L2.7830274,2.1330277C2.424031,2.1330274,2.1330282,2.4250306,2.133028,2.7830364L2.133028,26.339306C2.1330282,26.698303,2.424031,26.990314,2.7830274,26.990314L13.834112,26.990314 12.947112,29.122343 0.82001372,29.122343C0.36801444,29.122343,0,28.754327,0,28.302326L0,0.82001657C0,0.36800782,0.36801444,-2.2791892E-07,0.82001372,0z</Geometry>

    <Geometry x:Key="Yes">M29.403992,0L32,3.5860286 8.3720093,21.479001 5.7740173,17.895017 5.776001,17.893002 0,9.9110087 3.5079956,7.2570179 9.2829895,15.23602z</Geometry>

    <Geometry x:Key="No">M16.78125,18.2799987792969L26.0625,18.2799987792969 48.28125,40.4987487792969 70.78125,18.2799987792969 79.78125,18.2799987792969 79.78125,27.5612487792969 57.5625,49.7799987792969 79.78125,71.9987487792969 79.78125,81.2799987792969 70.78125,81.2799987792969 48.28125,59.0612487792969 26.0625,81.2799987792969 16.78125,81.2799987792969 16.78125,72.2799987792969 39,49.7799987792969 16.78125,27.5612487792969 16.78125,18.2799987792969z</Geometry>

    <Geometry x:Key="Add">M12.126984,0L19.872009,0 19.872009,12.128 32,12.128 32,19.872999 19.872009,19.872999 19.872009,31.999 12.126984,31.999 12.126984,19.872999 0,19.872999 0,12.128 12.126984,12.128z</Geometry>

    <Geometry x:Key="Loading">M0,19.017029L4.7279952,19.017029C5.5969827,20.605042 6.738004,22.14801 8.1480072,23.558044 13.120997,28.53302 21.784995,30.229004 26.218983,28.04303 23.403983,30.5 19.734,32 15.706995,32 7.902005,32 1.4140011,26.410034 0,19.017029z M15.706995,0C23.622977,0,30.17998,5.7540283,31.463,13.305054L26.858998,13.305054C25.970998,11.604004 24.769978,9.9460449 23.265982,8.4420166 17.488,2.6640015 8.0289886,1.2950439 3.8189988,5.3190308 6.7479832,2.0610352 10.980984,0 15.706995,0z</Geometry>

    <Geometry x:Key="DashAdd">M0,3.2989992L16.263,3.2989992C16.003998,3.8440015,15.798981,4.4169995,15.648987,5.0130002L1.7139893,5.0130002 1.7139893,18.724002 23.993988,18.724002 23.993988,16.603C24.233002,16.620998 24.472992,16.639003 24.717987,16.639003 25.052002,16.639003 25.381989,16.619998 25.707001,16.586002L25.707001,20.436999 16.709991,20.436999 16.709991,22.151996 18.852997,22.151996 18.852997,23.865001 6.8559875,23.865001 6.8559875,22.151996 8.9970093,22.151996 8.9970093,20.436999 0,20.436999z M23.93399,3.1879992L23.93399,6.4980003 20.623993,6.4980003 20.623993,8.0660011 23.93399,8.0660011 23.93399,11.376002 25.501984,11.376002 25.501984,8.0660011 28.811981,8.0660011 28.811981,6.4980003 25.501984,6.4980003 25.501984,3.1879992z M24.71701,0C28.73999,-1.6934871E-07 32,3.2610013 32,7.2810013 32,11.303996 28.73999,14.563998 24.71701,14.563998 20.695007,14.563998 17.434998,11.303996 17.434998,7.2810013 17.434998,3.2610013 20.695007,-1.6934871E-07 24.71701,0z</Geometry>

    <Geometry x:Key="DashFull">M27.099976,4C28.599976,4 29.799927,5.2000122 29.799927,6.7000122 29.799927,8.1000061 28.699951,9.2000122 27.400024,9.4000244L24.199951,17.200012C24.699951,17.700012 25.099976,18.400024 25.099976,19.200012 25.099976,20.700012 23.900024,21.900024 22.400024,21.900024 20.900024,21.900024 19.699951,20.700012 19.699951,19.200012 19.699951,18.900024 19.799927,18.700012 19.799927,18.400024L13.699951,12 11.400024,17.5C12,18 12.400024,18.700012 12.400024,19.600006 12.400024,21.100006 11.199951,22.300018 9.6999512,22.300018 8.1999512,22.300018 7,21.100006 7,19.600006 7,18.400024 7.7999268,17.300018 9,17L11.199951,11.600006C10.599976,11.100006 10.199951,10.400024 10.199951,9.5 10.199951,8 11.400024,6.8000183 12.900024,6.8000183 14.400024,6.8000183 15.599976,8 15.599976,9.5 15.599976,9.8000183 15.5,10.100006 15.5,10.300018L21.599976,16.700012C21.699951,16.700012,21.799927,16.600006,21.799927,16.600006L25.099976,8.6000061C24.699951,8.1000061 24.400024,7.5 24.400024,6.9000244 24.400024,5.2000122 25.599976,4 27.099976,4z M0,0L4.4000244,0 4.4000244,25.600006 32,25.600006 32,30 4.4000244,30 0.40002441,30 0,30z</Geometry>
    
    <Geometry x:Key="Minimize">M0,0L32,0 32,5.3 0,5.3z</Geometry>

    <Geometry x:Key="Maximize">M11.585977,18.999021L12.999977,20.41302 3.4147511,30.000045 9.999999,30.000045 9.999999,32.000045 0,32.000045 0,22.000045 2,22.000045 2,28.586798z M20.414059,18.998996L29.999999,28.586804 29.999999,22.000045 31.999999,22.000045 31.999999,32.000045 21.999999,32.000045 21.999999,30.000045 28.585288,30.000045 18.999996,20.412996z M21.999999,0L31.999999,0 31.999999,9.999999 29.999999,9.999999 29.999999,3.4131746 20.413977,13.001045 18.999977,11.587039 28.585168,2 21.999999,2z M0,0L9.999999,0 9.999999,2 3.4148293,2 13.000021,11.587039 11.586021,13.001045 2,3.4131756 2,9.999999 0,9.999999z</Geometry>

    <Geometry x:Key="Chart">M0,0L2,0 2,28.586113 12.946,17.641008 17.018999,21.566998 27.586025,11 21,11 21,9 31,9 31,18 29,18 29,12.414021 17.044001,24.369989 12.971,20.443001 3.4139738,30 32,30 32,32 0,32z</Geometry>

    <Geometry x:Key="IOPT">M3.56249952316284,25.335205078125L35.53125,25.335205078125 35.53125,28.850830078125 30.046875,28.850830078125 27.0644512176514,29.079345703125 25.4296875,29.764892578125 24.7089824676514,31.1887226104736 24.46875,33.632080078125 24.46875,86.132080078125 24.6796855926514,88.686767578125 25.3125,90.069580078125 26.8945293426514,90.878173828125 29.390625,91.147705078125 35.53125,91.147705078125 35.53125,94.663330078125 3.56249952316284,94.663330078125 3.56249952316284,91.147705078125 9.609375,91.147705078125 12.2343740463257,90.913330078125 13.734375,90.210205078125 14.4374990463257,88.721923828125 14.6718759536743,86.132080078125 14.6718759536743,33.632080078125 14.4609365463257,31.2063007354736 13.828125,29.928955078125 11.9648427963257,29.120361328125 9,28.850830078125 3.56249952316284,28.850830078125 3.56249952316284,25.335205078125z M76.5933380126953,27.491455078125L72.2398147583008,27.966064453125 68.3198928833008,29.389892578125 64.8335647583008,31.762939453125 61.780834197998,35.085205078125 59.299388885498,39.4797401428223 57.526927947998,45.0695838928223 56.463451385498,51.8547401428223 56.108959197998,59.835205078125 56.472240447998,68.422119140625 57.562084197998,75.573486328125 59.378490447998,81.289306640625 61.921459197998,85.569580078125 65.0005569458008,88.686767578125 68.4253616333008,90.913330078125 72.1958694458008,92.249267578125 76.3120880126953,92.694580078125 79.2212677001953,92.492431640625 81.9488067626953,91.885986328125 84.4947052001953,90.875244140625 86.8589630126953,89.460205078125 89.0166702270508,87.605712890625 90.9429397583008,85.276611328125 92.6377639770508,82.472900390625 94.1011505126953,79.194580078125 95.2803421020508,75.403564453125 96.1226272583008,71.061767578125 96.6279983520508,66.169189453125 96.7964630126953,60.725830078125 96.6382522583008,54.832763671875 96.1636428833008,49.622314453125 95.3726272583008,45.094482421875 94.2652130126953,41.249267578125 92.8648147583008,37.9724159240723 91.1948928833008,35.1496620178223 89.2554397583008,32.7810096740723 87.0464630126953,30.866455078125 84.6353302001953,29.389892578125 82.0894317626953,28.335205078125 79.4087677001953,27.702392578125 76.5933380126953,27.491455078125z M75.8433380126953,23.882080078125L80.1573028564453,24.170654296875 84.3335723876953,25.036376953125 88.3721466064453,26.479248046875 92.2730255126953,28.499267578125 95.8970413208008,31.0363788604736 99.1050491333008,34.0305213928223 101.897041320801,37.4816932678223 104.273025512695,41.389892578125 106.169998168945,45.656982421875 107.524978637695,50.184814453125 108.337966918945,54.973388671875 108.608963012695,60.022705078125 108.336502075195,65.076416015625 107.519119262695,69.878173828125 106.156814575195,74.427978515625 104.249588012695,78.725830078125 101.866279602051,82.667724609375 99.0757522583008,86.149658203125 95.8779983520508,89.171630859375 92.2730255126953,91.733642578125 88.4073028564453,93.774169921875 84.4273223876953,95.231689453125 80.3330841064453,96.106201171875 76.1245880126953,96.397705078125 72.0171585083008,96.112060546875 68.0386428833008,95.255126953125 64.1890335083008,93.826904296875 60.468334197998,91.827392578125 56.992259979248,89.296142578125 53.876537322998,86.272705078125 51.121166229248,82.757080078125 48.726146697998,78.749267578125 46.788158416748,74.379638671875 45.403881072998,69.778564453125 44.573314666748,64.946044921875 44.296459197998,59.882080078125 44.564525604248,54.897216796875 45.368724822998,50.161376953125 46.709056854248,45.674560546875 48.585521697998,41.436767578125 50.927806854248,37.5461463928223 53.665599822998,34.1008338928223 56.798900604248,31.1008319854736 60.327709197998,28.546142578125 64.0923538208008,26.505615234375 67.9331741333008,25.048095703125 71.8501663208008,24.173583984375 75.8433380126953,23.882080078125z M146.377746582031,28.428955078125L144.018951416016,28.490478515625 142.136932373047,28.675048828125 140.731658935547,28.982666015625 139.803161621094,29.413330078125 138.767974853516,30.7609882354736 138.422912597656,32.835205078125 138.422912597656,59.975830078125 147.827941894531,59.975830078125 151.985015869141,59.742919921875 155.519195556641,59.044189453125 158.430511474609,57.879638671875 160.718933105469,56.249267578125 162.448791503906,54.082763671875 163.684417724609,51.309814453125 164.42578125,47.930419921875 164.672912597656,43.944580078125 164.228424072266,38.6418495178223 162.894958496094,34.733642578125 160.701629638672,31.9387245178223 157.677551269531,29.975830078125 155.681518554688,29.299072265625 153.132873535156,28.815673828125 150.031616210938,28.525634765625 146.377746582031,28.428955078125z M117.469795227051,25.335205078125L151.669494628906,25.335205078125 157.120239257813,25.663330078125 161.884857177734,26.647705078125 165.963317871094,28.288330078125 169.355651855469,30.585205078125 172.023742675781,33.4123573303223 173.929534912109,36.6438026428223 175.072998046875,40.2795448303223 175.454162597656,44.319580078125 175.103057861328,48.309814453125 174.049743652344,51.796142578125 172.294219970703,54.778564453125 169.836486816406,57.257080078125 165.748794555664,59.943603515625 161.210571289063,61.862548828125 156.221817016602,63.013916015625 150.782531738281,63.397705078125 138.422912597656,63.397705078125 138.422912597656,87.069580078125 138.669006347656,88.839111328125 139.407287597656,90.022705078125 140.942443847656,90.866455078125 142.922912597656,91.147705078125 150.797912597656,91.147705078125 150.797912597656,94.663330078125 117.469795227051,94.663330078125 117.469795227051,91.147705078125 124.437324523926,91.147705078125 126.232032775879,90.942626953125 127.473579406738,90.327392578125 128.197296142578,89.360595703125 128.438537597656,88.100830078125 128.438537597656,32.835205078125 128.132568359375,31.0188007354736 127.214668273926,29.788330078125 125.449348449707,29.085205078125 122.601142883301,28.850830078125 117.469795227051,28.850830078125 117.469795227051,25.335205078125z M182.015411376953,25.335205078125L238.312286376953,25.335205078125 239.671661376953,51.538330078125 236.437286376953,51.538330078125 235.477111816406,46.1220703125 234.193969726563,41.427978515625 232.587890625,37.4560546875 230.658843994141,34.206298828125 228.406860351563,31.6787128448486 225.831909179688,29.873291015625 222.934020996094,28.7900390625 219.713165283203,28.428955078125 217.417205810547,28.663330078125 215.978546142578,29.366455078125 215.221038818359,30.6086444854736 214.968536376953,32.460205078125 214.968536376953,87.866455078125 215.214630126953,89.331298828125 215.952911376953,90.350830078125 217.253692626953,90.948486328125 219.187286376953,91.147705078125 226.171661376953,91.147705078125 226.171661376953,94.663330078125 193.968536376953,94.663330078125 193.968536376953,91.147705078125 201.937286376953,91.147705078125 203.343536376953,90.948486328125 204.374786376953,90.350830078125 205.007598876953,89.425048828125 205.218536376953,88.241455078125 205.218536376953,32.038330078125 204.949005126953,30.4738788604736 204.140411376953,29.343017578125 202.734161376953,28.657470703125 200.671661376953,28.428955078125 197.413848876953,28.830322265625 194.437286376953,30.034423828125 191.741973876953,32.041259765625 189.327911376953,34.850830078125 187.584747314453,37.8801307678223 186.105255126953,41.6711463928223 184.889434814453,46.2238807678223 183.937286376953,51.538330078125 180.515411376953,51.538330078125 182.015411376953,25.335205078125z</Geometry>
    <!--#endregion-->

    <!--#region Button-->
    <Style x:Key="{x:Type Button}" TargetType="{x:Type Button}">
        <Style.Setters>
            <Setter Property="FontFamily" Value="{DynamicResource FontFamilyMain}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Template" Value="{DynamicResource ButtonBaseControlTemplate}"/>
            <Setter Property="Foreground" Value="{DynamicResource OnDarkFontColor}" />
            <Setter Property="BorderBrush" Value="{DynamicResource MainColor}" />
            <Setter Property="Background" Value="{DynamicResource MainColor}"/>
                <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect ShadowDepth="3" BlurRadius="5" Color="{DynamicResource ShadowColor}" />
                </Setter.Value>
            </Setter>
        </Style.Setters>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.PreviewMouseDown">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation
               Storyboard.TargetProperty="Effect.ShadowDepth"
               To="0" Duration="0:0:0.2"
               AutoReverse="True" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="ButtonBaseControlTemplate" TargetType="{x:Type ButtonBase}">
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="True">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="border" Value="{DynamicResource ButtonOverColor}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ButtonOverColor}"/>
                <Setter Property="Cursor" Value="Hand"></Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" TargetName="border" Value="{DynamicResource ButtonClickColor}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource ButtonClickColor}"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Background" TargetName="border" Value="{DynamicResource MainColor}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource MainColor}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" TargetName="border" Value="{DynamicResource DisabledColor}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource DisabledColor}"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{DynamicResource OnDarkFontColor}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion-->

    <!--#region ListBox-->
    <Style x:Key="{x:Type ListBoxItem}" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="{DynamicResource ListBoxItemBackgroundColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource OnDarkFontColor}"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border x:Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="10,10,0,10"
                            SnapsToDevicePixels="true">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                            Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Background"
                                    TargetName="Bd"
                                    Value="{DynamicResource SelectionColor}" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ListBox}" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{DynamicResource AlternativeBackgroundColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MainColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlBrushKey}" Color="Transparent" />
        </Style.Resources>
    </Style>
    <!--#endregion-->

    <!--#region DataGrid-->
    <Style TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="{DynamicResource FontSizeBig}"/>
        <Setter Property="Foreground" Value="{DynamicResource OnLightFontColor}" />
        <Setter Property="Padding" Value="5,5,5,0"/>
        <Setter Property="BorderThickness" Value="0,0,0,1"/>
        <Setter Property="BorderBrush" Value="{DynamicResource OnLightFontColor}"/>
    </Style>

    <Style TargetType="{x:Type DataGrid}">
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="CanUserDeleteRows" Value="False" />
        <Setter Property="GridLinesVisibility" Value="None" />
        <Setter Property="Foreground" Value="{DynamicResource OnLightFontColor}"/>
        <Setter Property="AlternatingRowBackground" Value="Transparent"/>
        <Setter Property="RowBackground" Value="{DynamicResource RowBackgroundColor}"/>
        <Setter Property="Background" Value="{DynamicResource BackgroundColor}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MainColor}" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="DataGridCell">
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
                    <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}" />
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type DataGridRow}">
        <Setter Property="Foreground" Value="{DynamicResource OnLightFontColor}"/>
        <Setter Property="FontFamily" Value="{DynamicResource FontFamilyMain}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" Value="{DynamicResource SelectionColor}" />
                <!--<Setter Property="Height" Value="40"/>-->
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="DataGridTextColumn.Foreground" Value="{DynamicResource OnDarkFontColor}"/>
                <Setter Property="DataGridTextColumn.FontSize" Value="{DynamicResource FontSizeNormal}"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true" >
                <Setter Property="Background" Value="{DynamicResource MainColor}" />
                <Setter Property="DataGridTextColumn.Foreground" Value="{DynamicResource OnDarkFontColor}"/>
                <!--<Setter Property="Height" Value="40"/>-->
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="DataGridTextColumn.FontSize" Value="{DynamicResource FontSizeNormal}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type DataGridCell}">
        <Setter Property="Padding" Value="0,0,10,0"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="true" >
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <!--#endregion-->

    <!--#region TextBox-->
    <Style x:Key="{x:Type TextBox}" TargetType="{x:Type TextBox}">
        <Style.Setters>
            <Setter Property="Foreground" Value="{DynamicResource OnLightFontColor}" />
            <Setter Property="BorderBrush" Value="{DynamicResource DisabledColor}" />
            <Setter Property="Background" Value="{DynamicResource AlternativeBackgroundColor}" />
            <Setter Property="TextWrapping" Value="Wrap" />
            <Setter Property="FontFamily" Value="{DynamicResource FontFamilyMain}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
            <Setter Property="BorderThickness" Value="0,0,0,2"/>
            <Setter Property="SelectionBrush" Value="{DynamicResource SelectionColor}"/>
            <Setter Property="SelectionOpacity" Value="0.5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="bg" BorderBrush="{DynamicResource MainColor}" BorderThickness="0,0,0,2">
                            <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="BorderBrush" TargetName="bg" Value="{DynamicResource MainColor}"/>
                            </Trigger>

                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="bg" Value="{DynamicResource MainColor}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="True">
                                <Setter Property="BorderBrush" TargetName="bg" Value="{DynamicResource MainColor}"/>
                            </Trigger>
                            <Trigger Property="Text" Value="{x:Null}">
                                <Setter Property="BorderBrush" TargetName="bg" Value="{DynamicResource DisabledColor}"/>
                            </Trigger>
                            <Trigger Property="Text" Value="">
                                <Setter Property="BorderBrush" TargetName="bg" Value="{DynamicResource DisabledColor}"/>
                                <Setter Property="BorderThickness" TargetName="bg" Value="0,0,0,1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
    <!--#endregion-->

    <!--#region PasswordBox-->
    <Style x:Key="{x:Type PasswordBox}" TargetType="{x:Type PasswordBox}">
        <Style.Setters>
            <Setter Property="Foreground" Value="{DynamicResource OnLightFontColor}" />
            <Setter Property="BorderBrush" Value="{DynamicResource MainColor}" />
            <Setter Property="Background" Value="{DynamicResource AlternativeBackgroundColor}" />
            <Setter Property="FontFamily" Value="{DynamicResource FontFamilyMain}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
            <Setter Property="BorderThickness" Value="0,0,0,2"/>
            <Setter Property="SelectionBrush" Value="{DynamicResource SelectionColor}"/>
            <Setter Property="SelectionOpacity" Value="0.5"/>
        </Style.Setters>
    </Style>
    <!--#endregion-->

    <!--#region TabControl-->
    <classes:TabSizeConverter x:Key="TabSizeConverter" />
    <Style TargetType="{x:Type TabItem}">

        <Setter Property="Foreground" Value="{DynamicResource OnDarkFontColor}"/>
        <Setter Property="Background" Value="{DynamicResource MainColor}" />
        <Setter Property="FontFamily" Value="{DynamicResource FontFamilyMain}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
        <Setter Property="Width">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource TabSizeConverter}">
                    <Binding RelativeSource="{RelativeSource Mode=FindAncestor,
            AncestorType={x:Type TabControl}}" />
                    <Binding RelativeSource="{RelativeSource Mode=FindAncestor,
            AncestorType={x:Type TabControl}}" Path="ActualWidth" />
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabItem}">
                    <Grid>
                        <Border Name="Border" Margin="0,0,0,0" Background="{DynamicResource BackgroundColor}"
                  BorderBrush="Transparent" BorderThickness="0,0,0,0" CornerRadius="0" Height="50">
                            <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center"
                              HorizontalAlignment="Center"
                              ContentSource="Header" Margin="22,12,22,12"
                              RecognizesAccessKey="True">
                            </ContentPresenter>
                        </Border>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Panel.ZIndex" Value="100" />
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource BackgroundColor}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,0" />
                            <Setter Property="Background" Value="{DynamicResource BackgroundColor}" />
                            <Setter Property="Foreground" Value="{DynamicResource MainColor}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource MainColor}" />
                            <Setter TargetName="Border" Property="BorderThickness" Value="1,1,1,1" />
                            <Setter Property="Background" Value="{DynamicResource MainColor}" />
                            <Setter Property="Foreground" Value="{DynamicResource BackgroundColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource MainColor}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource BackgroundColor}" />
                            <Setter Property="Background" Value="{DynamicResource MainColor}" />
                            <Setter Property="Foreground" Value="{DynamicResource OnDarkFontColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region Scroll-->
    <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Grid">
                        <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                        <Border x:Name="Rectangle1" CornerRadius="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto"  Background="{TemplateBinding Background}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="Horizontal">
                            <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                            <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsFlicksEnabled" Value="false" />
        <Setter Property="Foreground" Value="{DynamicResource MainColor}" />
        <Setter Property="Background" Value="{DynamicResource BackgroundColor}" />
        <Setter Property="Width" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="GridRoot" Width="{DynamicResource ScrollWidth}" Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.00001*" />
                        </Grid.RowDefinitions>

                        <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="false" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="false" />
                            </Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                            <Setter Value="{DynamicResource ButtonSelectBrush}" TargetName="Thumb" Property="Background" />
                        </Trigger>
                        <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                            <Setter Value="{DynamicResource DarkBrush}" TargetName="Thumb" Property="Background" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter TargetName="GridRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="PART_Track" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Width" Value="Auto" />
                            <Setter Property="Height" Value="5" />
                            <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                            <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                            <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region ProgressBar-->
    <Style x:Key="{x:Type ProgressBar}" TargetType="{x:Type ProgressBar}">
        <Style.Setters>
            <Setter Property="Foreground" Value="{DynamicResource SelectionColor}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource MainColor}" />
            <Setter Property="Background" Value="{DynamicResource BackgroundColor}"/>
            <Setter Property="IsIndeterminate" Value="True" />
            <Setter Property="Panel.ZIndex" Value="100"/>
        </Style.Setters>
    </Style>
    <!--#endregion-->

    <!--#region ComboBox-->
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="0"
                  Background="{DynamicResource MainColor}"
                  BorderBrush="{DynamicResource MainColor}"
                  BorderThickness="1" />
            <Border 
                  Grid.Column="0"
                  CornerRadius="0" 
                  Margin="1" 
                  Background="{DynamicResource MainColor}" 
                  BorderBrush="{DynamicResource MainColor}"
                  BorderThickness="0,0,1,0" />
            <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="White"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Foreground" Value="{DynamicResource OnDarkFontColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Background="{DynamicResource MainColor}"
                            Foreground="Green"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                            <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                x:Name="DropDownBorder"
                                Background="{DynamicResource ButtonOverColor}"

                                BorderThickness="1"
                                BorderBrush="{DynamicResource MainColor}"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource MainColor}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable"  Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Foreground" Value="{StaticResource OnDarkFontColor}"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border"
                              Padding="6"
                              SnapsToDevicePixels="true">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource MainColor}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource MainColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region TranspButton-->
    <Style x:Key="TranspButton" TargetType="{x:Type Button}">
        <Style.Setters>
            <Setter Property="FontFamily" Value="{DynamicResource FontFamilyMain}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="Template" Value="{DynamicResource TranspButtonBaseControlTemplate}"/>
            <Setter Property="Foreground" Value="Transparent" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <TransformGroup>
                        <ScaleTransform/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Setter.Value>
            </Setter>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect ShadowDepth="2" BlurRadius="4" Color="{DynamicResource ShadowColor}" />
                </Setter.Value>
            </Setter>
        </Style.Setters>
        <Style.Triggers>
            <EventTrigger RoutedEvent="Button.PreviewMouseDown">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation
               Storyboard.TargetProperty="Effect.ShadowDepth"
               To="0" Duration="0:0:0.2"
               AutoReverse="True" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <!--Glow<Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect ShadowDepth="0" Color="DarkRed" Opacity="1" BlurRadius="20"/>
                    </Setter.Value>
                </Setter>
            </Trigger>-->
            <!--Меньше анимаций богу анимаций-->
            <!--<Trigger Property="IsMouseOver" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX" To="1.15" Duration="0:0:0.2"/>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY" To="1.15" Duration="0:0:0.2"/>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Children[1].X" To="-4" Duration="0:0:0.2"/>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Children[1].Y" To="-4" Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX" To="1.0" Duration="0:0:0.2"/>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY" To="1.0" Duration="0:0:0.2"/>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Children[1].X" To="0" Duration="0:0:0.2"/>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Children[1].Y" To="0" Duration="0:0:0.2"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>-->
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="TranspButtonBaseControlTemplate" TargetType="{x:Type ButtonBase}">
        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="Button.IsDefaulted" Value="True">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                <Setter Property="Cursor" Value="Hand"></Setter>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" TargetName="border" Value="Transparent"/>
                <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource OnDarkFontColor}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion-->

    <!--#region CheckBox-->
    <Style x:Key="CheckRadioFocusVisual">
        <Style.Setters>
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource OnLightFontColor}" />
        <Setter Property="BorderBrush" Value="{DynamicResource MainColor}" />
        <Setter Property="Background" Value="{DynamicResource BackgroundColor}" />
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="FontFamily" Value="{DynamicResource FontFamilyMain}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="StoryboardIsChecked">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="CheckFlag">
                                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.002" Value="14"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="StoryboardIsCheckedOff">
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.X)" Storyboard.TargetName="CheckFlag">
                                <EasingDoubleKeyFrame KeyTime="0" Value="14"/>
                                <EasingDoubleKeyFrame KeyTime="0:0:0.002" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <BulletDecorator Background="Transparent" SnapsToDevicePixels="true">
                        <BulletDecorator.Bullet>
                            <Border x:Name="ForegroundPanel" BorderThickness="1" Width="35" Height="20" CornerRadius="10">
                                <Canvas>
                                    <Border Background="White" x:Name="CheckFlag" CornerRadius="10" VerticalAlignment="Center" BorderThickness="1" Width="19" Height="18" RenderTransformOrigin="0.5,0.5">
                                        <Border.RenderTransform>
                                            <TransformGroup>
                                                <ScaleTransform/>
                                                <SkewTransform/>
                                                <RotateTransform/>
                                                <TranslateTransform/>
                                            </TransformGroup>
                                        </Border.RenderTransform>
                                        <Border.Effect>
                                            <DropShadowEffect ShadowDepth="1" Direction="180" />
                                        </Border.Effect>
                                    </Border>
                                </Canvas>
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource CheckRadioFocusVisual}"/>
                            <Setter Property="Padding" Value="4,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="ForegroundPanel" Property="Background" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ForegroundPanel" Property="Background" Value="{DynamicResource CheckedColor}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="BeginStoryboardCheckedTrue" Storyboard="{StaticResource StoryboardIsChecked}" />
                                <RemoveStoryboard BeginStoryboardName="BeginStoryboardCheckedFalse" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="ForegroundPanel" Property="Background" Value="{DynamicResource UncheckedColor}" />
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="BeginStoryboardCheckedFalse" Storyboard="{StaticResource StoryboardIsCheckedOff}" />
                                <RemoveStoryboard BeginStoryboardName="BeginStoryboardCheckedTrue" />
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region TreeView-->
    <Style x:Key="{x:Type TreeView}" TargetType="{x:Type TreeView}">
        <Style.Setters>
            <Setter Property="Foreground" Value="{DynamicResource OnLightFontColor}" />
            <Setter Property="BorderBrush" Value="{DynamicResource MainColor}" />
            <Setter Property="Background" Value="{DynamicResource BackgroundColor}" />
            <Setter Property="FontFamily" Value="{DynamicResource FontFamilyMain}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
            <Setter Property="SnapsToDevicePixels" Value="true"/>
        </Style.Setters>
    </Style>
    <!--#endregion-->

    <!--#region TreeViewItem-->
    <Style x:Key="{x:Type TreeViewItem}" TargetType="{x:Type TreeViewItem}">
        <Style.Setters>
            <Setter Property="Foreground" Value="{DynamicResource OnLightFontColor}" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="FontFamily" Value="{DynamicResource FontFamilyMain}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
            <Setter Property="SnapsToDevicePixels" Value="true"/>
        </Style.Setters>
    </Style>
    <!--#endregion-->

    <!--#region Slider-->
    <Style x:Key="SliderRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Focusable" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Rectangle Fill="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid>
                        <Border Name="outerBorder"
                            Background="{DynamicResource DisabledColor}"
                            BorderBrush="{DynamicResource DisabledColor}"
                            Height="24" Width="24" Opacity="1" BorderThickness="2" CornerRadius="12"/>
                        <Border Name="innerBorder"
                            Background="{DynamicResource MainColor}"
                            BorderBrush="{DynamicResource MainColor}"
                            Height="8" Width="8" CornerRadius="4" Opacity="1" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="outerBorder" Property="BorderBrush" Value="{DynamicResource ButtonOverColor}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="outerBorder" Property="Background" Value="#55ACACAC" />
                            <Setter TargetName="outerBorder" Property="BorderBrush" Value="#55ACACAC" />
                            <Setter TargetName="innerBorder" Property="Width" Value="4" />
                            <Setter TargetName="innerBorder" Property="Height" Value="4" />
                            <Setter TargetName="innerBorder" Property="CornerRadius" Value="2" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <ControlTemplate x:Key="VerticalSlider" TargetType="{x:Type Slider}">
        <Grid Margin="5">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" MinWidth="{TemplateBinding MinWidth}"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <TickBar x:Name="TopTick" Visibility="Collapsed" Fill="LightGray" Placement="Left" SnapsToDevicePixels="True"
                 Width="4" Margin="0,0,2,0" />
            <Border x:Name="TrackBackground"
                Grid.Column="1"
                Margin="0,10"
                BorderThickness="2"
                BorderBrush="LightGray"
                HorizontalAlignment="Center" Width="4" />
            <Track x:Name="PART_Track" Grid.Column="1">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}"  Style="{StaticResource SliderRepeatButtonStyle}" />
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                    <Thumb x:Name="Thumb" Style="{StaticResource SliderThumbStyle}" />
                </Track.Thumb>
            </Track>
            <TickBar x:Name="BottomTick" Grid.Column="2" Visibility="Collapsed" Fill="LightGray" Placement="Right"
                 Width="4" Margin="2,0,0,0" SnapsToDevicePixels="True" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="HorizontalSlider" TargetType="{x:Type Slider}">
        <Grid Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <TickBar x:Name="TopTick" Visibility="Collapsed" Fill="LightGray" Placement="Top" SnapsToDevicePixels="True"
                 Height="4" Margin="0,0,0,2" />
            <Border x:Name="TrackBackground"
                Grid.Row="1"
                Margin="10,0"
                BorderThickness="2"
                BorderBrush="{DynamicResource SelectionColor}"
                VerticalAlignment="Center" Height="4" />
            <Track x:Name="PART_Track" Grid.Row="1">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="{x:Static Slider.DecreaseLarge}"  Style="{StaticResource SliderRepeatButtonStyle}" />
                </Track.DecreaseRepeatButton>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource SliderRepeatButtonStyle}"/>
                </Track.IncreaseRepeatButton>
                <Track.Thumb>
                    <Thumb x:Name="Thumb" Style="{StaticResource SliderThumbStyle}" />
                </Track.Thumb>
            </Track>
            <TickBar x:Name="BottomTick" Grid.Row="2" Visibility="Collapsed" Fill="LightGray" Placement="Bottom"
                 SnapsToDevicePixels="True" Height="4" Margin="0,2,0,0"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="TickPlacement" Value="TopLeft">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="BottomRight">
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="TickPlacement" Value="Both">
                <Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
                <Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style x:Key="MyFocusVisualStyte" >
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle x:Name="FocusStyle" StrokeDashArray="4 4" RadiusX="5" RadiusY="5" Fill="Transparent"
                           Stroke="{DynamicResource MainColor}" StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="{x:Type Slider}" TargetType="{x:Type Slider}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource MyFocusVisualStyte}" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="MinWidth" Value="104" />
                <Setter Property="MinHeight" Value="21" />
                <Setter Property="Template" Value="{StaticResource HorizontalSlider}" />
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="MinWidth" Value="21" />
                <Setter Property="MinHeight" Value="104" />
                <Setter Property="Template" Value="{StaticResource VerticalSlider}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SliderRepeatButton" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border  BorderThickness="1" BorderBrush="Black" Background="Black" Height="3"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderRepeatButton1" TargetType="RepeatButton">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Border SnapsToDevicePixels="True" Background="Green"  BorderThickness="1" BorderBrush="YellowGreen" Height="3"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style x:Key="SliderThumb" TargetType="Thumb">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Ellipse Height="10" Width="10" Fill="Green"></Ellipse>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

    <ControlTemplate x:Key="Slider"  TargetType="Slider">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Track Grid.Row="1" x:Name="PART_Track"   >
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderRepeatButton1}"  Command="Slider.DecreaseLarge" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource SliderThumb}"  />
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource SliderRepeatButton}" Command="Slider.IncreaseLarge" />
                </Track.IncreaseRepeatButton>
            </Track>
        </Grid>
    </ControlTemplate>

    <Style x:Key="Horizontal_Slider" TargetType="Slider">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="MinHeight" Value="21" />
                <Setter Property="MinWidth" Value="104" />
                <Setter Property="Template" Value="{StaticResource Slider}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--#endregion-->

    <!--#region OxyPlot-->

    <ControlTemplate x:Key="OxyColumnTemplate">
        <oxy:TrackerControl
                        Background="{DynamicResource AlternativeBackgroundColor}"
                        LineExtents="{Binding PlotModel.PlotArea}"
                        LineStroke="{DynamicResource MainColor}"
                        Position="{Binding Position}">
            <Border Margin="2" BorderBrush="{DynamicResource MainColor}">
                <Grid Margin="6">
                    <TextBlock
                                Margin="2"
                                FontFamily="{DynamicResource FontFamilyMain}"
                                FontSize="{DynamicResource FontSizeNormal}"
                                Foreground="{DynamicResource MainColor}"
                                Text="{Binding}" />
                </Grid>
            </Border>
        </oxy:TrackerControl>
    </ControlTemplate>

    <ControlTemplate x:Key="OxyLineTemplate">
        <oxy:TrackerControl
                        Background="{DynamicResource BackgroundColor}"
                        LineExtents="{Binding PlotModel.PlotArea}"
                        LineStroke="{DynamicResource MainColor}"
                        Position="{Binding Position}">
            <Border Margin="2" BorderBrush="{DynamicResource OnLightFontColor}">
                <Grid Margin="6">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <TextBlock
                                Grid.Column="0"
                                Grid.Row="0"
                                Margin="2"
                                FontFamily="{DynamicResource FontFamilyMain}"
                                FontSize="{DynamicResource FontSizeNormal}"
                                Text="X :" />
                    <TextBlock
                                Grid.Column="1"
                                Grid.Row="0"
                                Margin="2"
                                FontFamily="{DynamicResource FontFamilyMain}"
                                FontSize="{DynamicResource FontSizeNormal}"
                                Foreground="{DynamicResource MainColor}"
                                Text="{Binding DataPoint.X, StringFormat={}{0:0.##}}" />
                    <TextBlock
                                Grid.Column="0"
                                Grid.Row="1"
                                Margin="2"
                                FontFamily="{DynamicResource FontFamilyMain}"
                                FontSize="{DynamicResource FontSizeNormal}"
                                Text="Y :" />
                    <TextBlock
                                Grid.Column="1"
                                Grid.Row="1"
                                Margin="2"
                                FontFamily="{DynamicResource FontFamilyMain}"
                                FontSize="{DynamicResource FontSizeNormal}"
                                Foreground="{DynamicResource MainColor}"
                                Text="{Binding DataPoint.Y, StringFormat={}{0:0.##}}" />
                </Grid>
            </Border>

        </oxy:TrackerControl>
    </ControlTemplate>

    <Style TargetType="{x:Type oxy:Plot}">
        <Setter Property="PlotAreaBackground" Value="{DynamicResource BackgroundColor}"/>
        <Setter Property="Background" Value="{DynamicResource AlternativeBackgroundColor}"/>
        <Setter Property="PlotAreaBorderColor" Value="{DynamicResource OnLightColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource OnLightFontColor}"/>
        <!--<Setter Property="LegendBackground" Value="{DynamicResource AlternativeBackgroundColor}"/>-->
        <!--<Setter Property="LegendFont" Value="{DynamicResource FontFamilyHighlight}"/>-->
        <Setter Property="LegendFontSize" Value="{DynamicResource FontSizeNormal}"/>
        <Setter Property="LegendTitleColor" Value="{DynamicResource OnLightColor}"/>
        <!--<Setter Property="LegendTitleFont" Value="{DynamicResource FontFamilyHighlight}"/>-->
        <Setter Property="LegendTitleFontSize" Value="{DynamicResource FontSizeBig}"/>
        <!--<Setter Property="DefaultFont" Value="{DynamicResource FontFamilyMain}"/>-->
        <Setter Property="DefaultFontSize" Value="{DynamicResource FontSizeNormal}"/>
        <Setter Property="TitleColor" Value="{DynamicResource OnLightColor}"/>
        <!--<Setter Property="TitleFont" Value="{DynamicResource FontFamilyHighlight}"/>-->
        <Setter Property="TitleFontSize" Value="{DynamicResource FontSizeBig}"/>
        <Setter Property="SubtitleColor" Value="{DynamicResource OnLightColor}"/>
        <!--<Setter Property="SubtitleFont" Value="{DynamicResource FontFamilyHighlight}"/>-->
        <Setter Property="SubtitleFontSize" Value="{DynamicResource FontSizeNormal}"/>
        <Setter Property="TextColor" Value="{DynamicResource OnLightColor}"/>
    </Style>

    <Style TargetType="oxy:Axis">
        <Setter Property="TicklineColor" Value="{DynamicResource OnLightColor}" />
        <Setter Property="MajorGridlineColor" Value="{DynamicResource OnLightColor}" />
        <Setter Property="MinorGridlineColor" Value="{DynamicResource OnLightColor}" />
        <Setter Property="ExtraGridlineColor" Value="{DynamicResource OnLightColor}" />
        <Setter Property="AxislineColor" Value="{DynamicResource OnLightColor}" />
        <Setter Property="TitleColor" Value="{DynamicResource OnLightColor}" />
        <Setter Property="TextColor" Value="{DynamicResource OnLightColor}" />
    </Style>
    <!--#endregion-->

    <!--#region StaticCheckBox-->
    <Style x:Key="StaticCheckBox" TargetType="{x:Type CheckBox}">
        <Style.Setters>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource OnLightFontColor}" />
            <Setter Property="BorderBrush" Value="{DynamicResource MainColor}" />
            <Setter Property="Background" Value="{DynamicResource BackgroundColor}" />
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="IsEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <BulletDecorator Background="Transparent">
                            <BulletDecorator.Bullet>
                                <Border x:Name="Border"
                                         Background="Transparent"
                                       BorderBrush="{TemplateBinding BorderBrush}"
                                       BorderThickness="0"
                                       ClipToBounds="True">
                                    <Path x:Name="CheckMark"
                                          HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                          Data="{DynamicResource Yes}"
                                         Stretch="Uniform"
                                         Stroke="{DynamicResource CheckedColor}"
                                            Fill="{DynamicResource CheckedColor}"
                                        StrokeThickness="0" />
                                </Border>
                            </BulletDecorator.Bullet>
                            <ContentPresenter Margin="4,0,0,0"
                                             HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                             RecognizesAccessKey="True" />
                        </BulletDecorator>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="false">
                                <Setter TargetName="CheckMark" Property="Data" Value="{DynamicResource No}" />
                                <Setter TargetName="CheckMark" Property="Fill" Value="{DynamicResource UncheckedColor}" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="CheckMark" Property="Data" Value="{DynamicResource Yes}" />
                                <Setter TargetName="CheckMark" Property="Fill" Value="{DynamicResource CheckedColor}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>

    <!--#endregion-->

    <!--#region Radiobutton-->
    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="OptionMarkFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
        <Setter Property="Background" Value="{DynamicResource BackgroundColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource MainColor}"/>
        <Setter Property="Foreground" Value="{DynamicResource OnLightFontColor}"/>
        <Setter Property="FontFamily" Value="{DynamicResource FontFamilyMain}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="radioButtonBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="100" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,2,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid x:Name="markGrid" Margin="2">
                                <Ellipse x:Name="optionMark" Fill="{DynamicResource SelectionColor}" MinWidth="10" MinHeight="10" Opacity="0"/>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="true">
                            <Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
                            <Setter Property="Padding" Value="5,0,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Opacity" TargetName="radioButtonBorder" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="radioButtonBorder" Value="{DynamicResource DisabledColor}"/>
                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{DynamicResource DisabledColor}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{DynamicResource DisabledColor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{DynamicResource ButtonClickColor}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{DynamicResource SelectionColor}"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0.56"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Tooltip-->
    <Style x:Key="{x:Type ToolTip}" TargetType="{x:Type ToolTip}">
        <Style.Setters>
            <Setter Property="Foreground" Value="{DynamicResource SelectionColor}" />
            <Setter Property="BorderBrush" Value="{DynamicResource MainColor}" />
            <Setter Property="Background" Value="{DynamicResource AlternativeBackgroundColor}" />
            <Setter Property="FontFamily" Value="{DynamicResource FontFamilyMain}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
            <Setter Property="BorderThickness" Value="1"/>
        </Style.Setters>
    </Style>
    <!--#endregion-->

    <!--#region RoundProgress-->
    <Style x:Key="{x:Type controls:RoundProgressBar}" TargetType="{x:Type controls:RoundProgressBar}">
        <Style.Setters>
            <Setter Property="Foreground" Value="{DynamicResource MainColor}" />
            <Setter Property="BorderBrush" Value="Transparent" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="FontFamily" Value="{DynamicResource FontFamilyHighlight}"/>
            <Setter Property="FontSize" Value="{DynamicResource FontSizeNormal}"/>
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="StrokeThickness" Value="4"/>
            <Setter Property="SegmentColor" Value="{DynamicResource CheckedColor}"/>
            <Setter Property="EmptySegmentColor" Value="{DynamicResource OnLightFontColor}"/>
        </Style.Setters>
    </Style>
    <!--#endregion-->

    <!--#region Popup-->
    <Style x:Key="TextPopup" TargetType="{x:Type Popup}">
        <Style.Setters>
            <Setter Property="Placement" Value="Top"/>
            <Setter Property="AllowsTransparency" Value="True"/>
            <Setter Property="PopupAnimation" Value="Fade"/>
            <Setter Property="StaysOpen" Value="False"/>
            <Setter Property="Child">
                <Setter.Value>
                    <TextBlock Background="Transparent" Foreground="{DynamicResource OnLightFontColor}" FontSize="{DynamicResource FontSizeBig}" FontFamily="{DynamicResource FontFamilyHighlight}">
                        <TextBlock.Effect>
                            <DropShadowEffect ShadowDepth="1" BlurRadius="2" Color="{DynamicResource ShadowColor}" />
                        </TextBlock.Effect>
                    </TextBlock>
                </Setter.Value>
            </Setter>
        </Style.Setters>
    </Style>
    <!--#endregion-->

</ResourceDictionary>